---
import ContentArea from "../../../components/ContentArea.astro";
import TableData from "../../../components/table/TableData.astro";
import TableHead from "../../../components/table/TableHead.astro";
import TableRow from "../../../components/table/TableRow.astro";
import { PROVIDER_LOCATIONS_URL } from "../../../constants";
import Layout from "../../../layouts/Layout.astro";
import type { ProviderLocationsResponse } from "../../../types";
import { truncateId } from "../../../utils";

const res = await fetch(PROVIDER_LOCATIONS_URL);
const data = (await res.json()) as ProviderLocationsResponse;
const { locations } = data;

// sort locations by country code
locations.sort((a, b) => a.country_code.localeCompare(b.country_code));

// within each country, sort by name
locations.sort((a, b) => {
  if (a.country_code === b.country_code) {
    return a.name.localeCompare(b.name);
  }

  return 0;
});

const providerCount = locations
  .reduce((acc, location) => acc + location.provider_count, 0)
  .toLocaleString();

Astro.response.headers.set(
  "Cache-Control",
  "public, max-age=0, s-maxage=43200, stale-while-revalidate=43200"
);
---

<Layout
  title="Provider Locations"
  description="BringYour VPN Provider Locations"
>
  <h1 class="font-bold text-lg mb-8">Provider Locations</h1>

  <ContentArea>
    <div class="border-b border-blue-700 w-full pb-4 mb-4">
      <span class="font-bold">Total Providers:</span>
      {providerCount}
    </div>

    <table class="w-full">
      <thead>
        <tr>
          <TableHead>Name</TableHead>
          <TableHead>ID</TableHead>
          <TableHead>Country</TableHead>
          <TableHead>Provider Count</TableHead>
        </tr>
      </thead>

      <tbody>
        {
          locations.map((location) => (
            <TableRow>
              <TableData
                href={`/network/provider-locations/${location.location_id}`}
              >
                {location.name}
              </TableData>

              <TableData
                href={`/network/provider-locations/${location.location_id}`}
              >
                {truncateId(location.location_id)}
              </TableData>

              <TableData
                href={`/network/provider-locations/${location.location_id}`}
              >
                {location.country_code}
              </TableData>

              <TableData
                href={`/network/provider-locations/${location.location_id}`}
              >
                {location.provider_count}
              </TableData>
            </TableRow>
          ))
        }
      </tbody>
    </table>
  </ContentArea>
</Layout>
